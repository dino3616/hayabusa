name: db push migration

on:
  push:
    branches:
      - main

env:
  DATABASE_URL: postgresql://postgres:postgres@localhost:54322/postgres
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      db: ${{ steps.changes.outputs.db }}
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/filter.yaml

  push:
    runs-on: ubuntu-latest
    env:
      SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID: ${{ secrets.SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID }}
      SUPABASE_AUTH_EXTERNAL_GOOGLE_SECRET: ${{ secrets.SUPABASE_AUTH_EXTERNAL_GOOGLE_SECRET }}
      SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
    needs: filter
    if: needs.filter.outputs.db == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.workflow_run.head_sha }}
          token: ${{ secrets.PAT }}

      - name: setup supabase cli
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.30

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT

      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: install dependencies
        run: bun install --frozen-lockfile

      - name: authenticate to supabase
        run: bun supabase link --project-ref ${{ secrets.SUPABASE_REFERENCE_ID }}

      - name: start local supabase
        run: bun supabase start

      - name: lint local db
        run: bun supabase db lint

      - name: deploy migration file to remote db
        run: echo y | bun supabase db push

  db-push-migration-check:
    runs-on: ubuntu-latest
    needs: push
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "test is successfully executed."
