name: graphql deploy apollo studio

on:
  push:
    branches:
      - main

env:
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ secrets.TURBO_TEAM }}

jobs:
  filter:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      graphql: ${{ steps.changes.outputs.graphql }}
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: check for file changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          token: ${{ github.token }}
          filters: .github/filter.yaml

  deploy-apollo-studio:
    runs-on: ubuntu-latest
    env:
      APOLLO_KEY: ${{ secrets.APOLLO_KEY }}
    needs: filter
    if: needs.filter.outputs.graphql == 'true'
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.30

      - name: get bun cache directory
        id: get-bun-cache-directory
        run: echo "STORE_PATH=$(bun pm cache)" >> $GITHUB_OUTPUT

      - name: cache bun dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.get-bun-cache-directory.outputs.STORE_PATH }}
          key: ${{ runner.os }}-bun-dependencies-${{ hashFiles('**/bun.lockb') }}
          restore-keys: ${{ runner.os }}-bun-dependencies-

      - name: install dependencies
        run: bun install --frozen-lockfile

      - name: generate graphql schema
        run: bun api-schema generate

      - name: publish graphs
        run: bun api-schema gql:publish

  graphql-deploy-apollo-check:
    runs-on: ubuntu-latest
    needs: deploy-apollo-studio
    if: ${{ ! failure() }}
    steps:
      - name: check
        run: echo "test is successfully executed."
